#types
(\s+)byte\s+§\1Byte §
(\s+)short\s+§\1Short §
(\s+)int\s+§\1Int §
(\s+)long\s+§\1Long §
(\s+)float\s+§\1Float §
(\s+)double\s+§\1Double §
(\s+)char\s+§\1Char §
(\s+)boolean\s+§\1Boolean §
#imports
import spock.lang.Specification§import org.junit.Test\nimport org.assertj.core.api.KotlinAssertions.assertThat\nimport org.junit.Before\nimport com.nhaarman.mockito_kotlin.*§
class\s+(\w+)\s+extends\s+Specification\s*{§class \1Kt {§
(\s*)void\s+setup\s*\(\s*\)\s*{§\1@Before\n\1fun setup() {§
(\s*)def\s+setup\s*\(\s*\)\s*{§\1@Before\n\1fun setup() {§
(\s+)void\s+§\1§
^(\s+)def "(.*?)"\(\)\s*{§\1@Test\n\1fun `\2` () {§
^(\s+)def (.*)(\(.*\))\s+{§\1fun \2\3 {§
^(\s+)def\s+(.*)§\1val \2§
^(\s+)(given|when|then|expect|and):§\1//\2§
^(\s+)(assert)?(.*?) == (\S+)$§\1assertThat(\3).isEqualTo(\4)§
^(\s+)(.*?)\.equals(\S+)$§\1assertThat(\2).isEqualTo\3§
\s+new\s+§ §
([\s\(]+)Mock\s*\((.*?)\)§\1mock<\2>()§
([\s\(]+)Spy\s*\((.*?)\)§\1spy<\2>()§
_([^[a-zA-Z0-9_])§any()\1§
\[\]§emptyList()§
ArrayList\(\)§emptyList().toMutableList()§
\[:\]§emptyMap()§
^(\s+)(\d{1,3}) \* (.*?)\.(.*)§\1verify(\3, times(\2)).\4§
#todo eq